<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guia Rápido on Documentação Ansible-br</title>
    <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/</link>
    <description>Recent content in Guia Rápido on Documentação Ansible-br</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    
	<atom:link href="https://ansible-br.github.io/primeiros-passos/guia-rapido/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Passo 1 - Repositório</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-1/</guid>
      <description> Adicionando o repositório do EPEL Para o Fedora 24+ ou RHEL/CentOS 7 não será necessário executar este passo. O Ansible já está disponível no repositório padrão.
 Para os ambientes de RHEL/CentOS 6, é necessário adicionar/instalar o repositório do EPEL (Extra Packages for Enterprise Linux).
$ sudo yum install epel-release -y  </description>
    </item>
    
    <item>
      <title>Passo 2 - Instalação</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-2/</guid>
      <description> Instalando o Ansible Control A instalação do Ansible em ambiente RHEL/CentOS 6+ é realizada da mesma forma que no Fedora 24+ , mudando só o utilitário gerenciador de pacotes de DNF para YUM:
RHEL/Centos 6+ $ sudo yum install ansible libselinux-python -y  Fedora 24+ $ sudo dnf install ansible libselinux-python -y  Para outras opções de instalação do Ansible, siga essas instruções (inglês) </description>
    </item>
    
    <item>
      <title>Passo 3 - Ad-Hoc</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-3/</guid>
      <description>Primeiros comandos Ad-Hoc: Após a conclusão da instalação, o Ansible já estará pronto para iniciar os primeiros comandos de automação.
Verificando a versão do Ansible $ ansible --version ansible 2.3.2.0 config file = /etc/ansible/ansible.cfg configured module search path = Default w/o overrides python version = 2.7.13 (default, May 10 2017, 20:04:36) [GCC 6.3.1 20161221 (Red Hat 6.3.1-1)]  MÓDULO PING: Verificar conectividade entre o Ansible Control e o Host $ ansible localhost -m ping [WARNING]: Host file not found: /etc/ansible/hosts [WARNING]: provided hosts list is empty, only localhost is available localhost | SUCCESS =&amp;gt; { &amp;quot;changed&amp;quot;: false, &amp;quot;ping&amp;quot;: &amp;quot;pong&amp;quot; }  Quando nenhum arquivo de inventário é definido (Por padrão /etc/ansible/host ou o parâmetro -i &amp;lt;path/nomeinventario&amp;gt;), somente o Host &amp;lsquo;localhost&amp;rsquo; fica disponível para os comandos Ansible.</description>
    </item>
    
    <item>
      <title>Passo 4 - Módulos</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-4/</guid>
      <description>Verificando os módulos disponíveis O Ansible vem com um utilitário chamado ansible-doc. Nele é possível consultar todos os módulos disponíveis numa instalação padrão do Ansible:
$ ansible-doc -l [...] expect Executes a command and responds to prompts facter Runs the discovery program `facter&#39; on the remote system fail Fail with custom message fetch Fetches a file from remote nodes file Sets attributes of files filesystem Makes file system on block device find return a list of files based on specific criteria firewalld Manage arbitrary ports/services with firewalld flowadm Manage bandwidth resource control and priority for protocols, se.</description>
    </item>
    
    <item>
      <title>Passo 5 - Inventário</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-5/</guid>
      <description>Primeiro arquivo de Inventário O Ansible foi projetado para trabalhar com múltiplos sistemas (servidores baremetal, máquinas virtuais, Dispositivos de rede etc.) ao mesmo tempo. Ele trabalha selecionando partes desses sistemas listados num arquivo de inventário, que por padrão fica salvo em /etc/ansible/hosts. É possível também especificar um arquivo diferente usando o parâmetro -i &amp;lt;path/nomeinventario&amp;gt; na linha de comando (Ad-Hoc $ ansible ou Playbook $ ansible-playbook).
O arquivo padrão de inventário já vem com vários exemplos, conforme se vê abaixo:</description>
    </item>
    
    <item>
      <title>Passo 6 - Playbook</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-6/</guid>
      <description>Primeira Playbook Os comandos Ad-Hoc executam apenas um módulo por vez. Mas e se a gente quiser criar uma sequência de tarefas com os módulos disponíveis? Aí que entram as playbooks.
Utilizando um arquivo no formato YAML (veja sintaxe YAML), todas as tarefas podem ser definidas em sequência e chamadas através de um único comando ansible-playbook -i &amp;lt;nome_inventario&amp;gt; &amp;lt;nome_playbook&amp;gt;.
Uma playbook basicamente é composta por &amp;lsquo;play&amp;rsquo; e &amp;lsquo;tasks&amp;rsquo;. Uma &amp;lsquo;play&amp;rsquo; é análoga a uma jogada ensaiada de basquete.</description>
    </item>
    
    <item>
      <title>Passo 7 - Dicas e truques</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/passo-7/</guid>
      <description>1) Criar relação de confiança Hosts Linux Para se conectar aos Hosts Linux, o meio mais prático é criar relação de confiança entre o Ansible Control e os Hosts alvo:
Gerar uma chave de conexão $ ssh-key-gen    Expandir saída   Generating public/private rsa key pair. Enter file in which to save the key (/home/usuario/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/usuario/.</description>
    </item>
    
    <item>
      <title>Recapitulando</title>
      <link>https://ansible-br.github.io/primeiros-passos/guia-rapido/recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ansible-br.github.io/primeiros-passos/guia-rapido/recap/</guid>
      <description>Recapitulando Criando uma analogia, os módulos/tasks são as ferramentas, as playbooks são o manuais de instruções e o inventário é a matéria prima para construirmos um produto/serviço através da automação.
Como vimos, a automação com Ansible é simples desde a sua instalação até a execução Ad-Hoc de tasks nos Hosts (naturalmente via ssh - Linux). Os comandos Ad-Hoc nos lembram comandos que são realizados em bash/shell no Linux, onde podemos facilmente evoluir para a execução automatizada com Playbooks.</description>
    </item>
    
  </channel>
</rss>